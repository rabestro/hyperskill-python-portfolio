name: Create Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create tags and releases

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag, or set to v0.0.0 if no tags exist
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          # A little shell script magic to bump the version
          latest_tag="${{ steps.get_tag.outputs.latest_tag }}"
          version="${latest_tag#v}" # Strip 'v' prefix
          major=$(echo "$version" | cut -d. -f1)
          minor=$(echo "$version" | cut -d. -f2)
          patch=$(echo "$version" | cut -d. -f3)

          case "${{ github.event.inputs.bump }}" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac

          new_tag="v${major}.${minor}.${patch}"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "New tag will be: $new_tag"

      - name: Create new Git tag
        run: |
          git tag ${{ steps.bump_version.outputs.new_tag }}
          git push origin ${{ steps.bump_version.outputs.new_tag }}

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PAT }}
          NEW_TAG: ${{ steps.bump_version.outputs.new_tag }}
        run: |
          # Create a release, which will in turn trigger the publish.yml workflow
          gh release create "$NEW_TAG" \
            --generate-notes \
            --title "$NEW_TAG"
