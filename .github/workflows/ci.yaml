name: Quality Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12", "3.13" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Create Virtual Environment
        run: uv venv

      - name: Install dependencies
        run: uv sync --locked --all-extras

      - name: Check formatting with Ruff
        run: uv run ruff format --check .

      - name: Lint with Ruff
        run: uv run ruff check .

      - name: Type check with MyPy
        run: uv run mypy src/

      - name: Run tests with Pytest
        run: uv run pytest

  generate-reports:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.20"
          python-version: "3.12"
          enable-cache: true

      - name: Install dependencies from lock file
        run: uv sync --locked --all-extras

      - name: Generate Code Metrics Reports
        run: |
          echo "### Cyclomatic Complexity Report" >> $GITHUB_STEP_SUMMARY
          uv run radon cc src/ --show-complexity --average --total-average --md >> $GITHUB_STEP_SUMMARY
          echo "### Maintainability Index Report" >> $GITHUB_STEP_SUMMARY
          uv run radon mi src/ >> $GITHUB_STEP_SUMMARY
